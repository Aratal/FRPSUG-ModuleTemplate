<?xml version="1.0" encoding="utf-8"?>
<plasterManifest
  schemaVersion="1.1"
  templateType="Project" xmlns="http://www.microsoft.com/schemas/PowerShell/Plaster/v1">
  <metadata>
    <name>FRPSUG-ModuleTemplate</name>
    <id>430104ca-eec4-4602-bb82-83a786ee5d5b</id>
    <version>0.0.1</version>
    <title>Full Module Template For FRPSUG</title>
    <description>Full Module Template For FRPSUG</description>
    <author>Laurent LIENHARD</author>
    <tags>Module, Complete, FRPSUG</tags>
  </metadata>
  <parameters>
    <parameter name='ModuleName' type='text' prompt='`r`nEnter the name of the module' />
    <parameter name='ModuleDescription' type='text' prompt='`r`nEnter a description of the module (required for publishing to the PowerShell Gallery)' />
    <parameter name='AuthorName' type='user-fullname' prompt='`r`nEnter your full name' />
    <parameter name='AuthorEmail' type='user-email' prompt='`r`nEnter your email address' />
    <parameter name='ModuleVersion' type='text' prompt='`r`nEnter the version number for the module' default='0.0.1' />
    <parameter name='Company' type='text' prompt='`r`nEnter the company name' default='None' />
    <parameter name='AllWhatYouWant' type='text' prompt='`r`nEnter what you want in text format' />

  <parameter name='ModuleFolders' type = 'multichoice' prompt='`r`nPlease select folders to include' default='0,1'>
    <choice label='&amp;Functions' value='functions' help='Adds a function folder to module'/>
    <choice label='&amp;Classes' value='Classes' help='Adds a Classes folder to module'/>
    <choice label='&amp;Enums' value='Enums' help='Adds a Enums folder to module'/>
  </parameter>

  <parameter name='License' type='choice' default='1' store='text' prompt='`r`nSelect a license for your module'>
    <choice label='&amp;Apache' help='Add an Apache license file.' value='Apache'/>
    <choice label='&amp;MIT' help='Add an MIT license file.' value='MIT'/>
    <choice label='&amp;None' help='No license specified.' value='None'/>
  </parameter>
  
  <parameter name='UnitTests' type = 'choice' prompt='`r`nAdd UnitTests Folder' default='0'>
    <choice label='&amp;Yes' value='Yes' help='Add UnitTests Folder.'/>
    <choice label='&amp;No' value='No' help='No UnitTests support'/>
  </parameter>

  <parameter name='Deploy' type = 'choice' prompt='`r`nAdd Deploy Folder' default='0'>
    <choice label='&amp;Yes' value='Yes' help='Add Deploy Folder.'/>
    <choice label='&amp;No' value='No' help='No Deploy support'/>
  </parameter>

  <parameter name='Build' type = 'choice' prompt='`r`nAdd Build Folder' default='0'>
    <choice label='&amp;Yes' value='Yes' help='Add Build Folder.'/>
    <choice label='&amp;No' value='No' help='No Build support'/>
  </parameter>

  <parameter name='Editor' type='choice' default='1' store='text' prompt='`r`nWhich editor do you use'>
    <choice label='&amp;ISE' help='Your editor is PowerShell ISE.' value='ISE'/>
    <choice label='Visual Studio &amp;Code' help='Your editor is Visual Studio Code.' value='VSCode'/>
    <choice label='&amp;None' help='No editor specified.' value='None'/>
  </parameter>

  <parameter name='Github' type = 'choice' prompt='`r`nAdd support for Github' default='0'>
    <choice label='&amp;Yes' value='Yes' help='Add Github Folder.'/>
    <choice label='&amp;No' value='No' help='No Github support'/>
  </parameter>

  <parameter name='Docs' type = 'choice' prompt='`r`nAdd Docs Folder' default='0'>
    <choice label='&amp;Yes' value='Yes' help='Add Docs Folder.'/>
    <choice label='&amp;No' value='No' help='No Docs Folder'/>
  </parameter>

  <parameter name='CI' type = 'choice' prompt='`r`nAdd Continous Integration Folder' default='0'>
    <choice label='&amp;Yes' value='Yes' help='Add Continous Integration Folder.'/>
    <choice label='&amp;No' value='No' help='No Continous Integration support'/>
  </parameter>

  </parameters>
  
  <content>
    <message>____________________________________</message>
    <message>`r`n-> Creating your root folders for module : ${PLASTER_PARAM_ModuleName}</message>
    <message>____________________________________</message>
    <file source='' destination='${PLASTER_PARAM_ModuleName}' />

    <message>`r`n-> Creating your source code folders </message>
    <file source='' destination='${PLASTER_PARAM_ModuleName}\Sources\Functions\Private' condition='$PLASTER_PARAM_ModuleFolders -contains "functions"' />
    <file source='' destination='${PLASTER_PARAM_ModuleName}\Sources\Functions\Public' condition='$PLASTER_PARAM_ModuleFolders -contains "functions"'/>
    <file source='' destination='${PLASTER_PARAM_ModuleName}\Sources\Classes\Private' condition='$PLASTER_PARAM_ModuleFolders -contains "Classes"' />
    <file source='' destination='${PLASTER_PARAM_ModuleName}\Sources\Classes\Public' condition='$PLASTER_PARAM_ModuleFolders -contains "Classes"'/>
    <file source='' destination='${PLASTER_PARAM_ModuleName}\Sources\Enums' condition='$PLASTER_PARAM_ModuleFolders -contains "Enums"' />
    
    <message condition='$PLASTER_PARAM_UnitTests -eq "Yes"'>`r`n-> Creating UnitTests folder</message>
    <file source='' destination='${PLASTER_PARAM_ModuleName}\UnitTests' condition='$PLASTER_PARAM_UnitTests -eq "Yes"' />
    <message condition='$PLASTER_PARAM_UnitTests -eq "Yes"'>`r`n-> Copying UnitTests files</message>
    <templateFile source='UnitTests\*.Tests.ps1' destination='${PLASTER_PARAM_ModuleName}\UnitTests\' condition='$PLASTER_PARAM_UnitTests -eq "Yes"'/>

    <message condition='$PLASTER_PARAM_License -in @("MIT","Apache")'>`r`n-> Creating Licence file</message>
    <file source='' destination='${PLASTER_PARAM_ModuleName}\Licenses' condition='$PLASTER_PARAM_License -in @("MIT","Apache")' />
    <file source='Licenses\MIT.md' destination='${PLASTER_PARAM_ModuleName}\Licenses\MIT.md' condition='$PLASTER_PARAM_License -eq "MIT"' />
    <file source='Licenses\Apache.md' destination='${PLASTER_PARAM_ModuleName}\Licenses\Apache.md' condition='$PLASTER_PARAM_License -eq "Apache"' />
  
    <message condition='$PLASTER_PARAM_Deploy -eq "Yes"'>`r`n-> Creating Deploy folder</message>
    <file source='' destination='${PLASTER_PARAM_ModuleName}\Deploy' condition='$PLASTER_PARAM_Deploy -eq "Yes"' />
    <message condition='$PLASTER_PARAM_Deploy -eq "Yes"'>`r`n-> Copying Deploy files</message>
    <templateFile source='Deploy\template.PSDeploy.ps1' destination='${PLASTER_PARAM_ModuleName}\Deploy\${PLASTER_PARAM_ModuleName}.PSDeploy.ps1' condition='$PLASTER_PARAM_Deploy -eq "Yes"'/>

    <message condition='$PLASTER_PARAM_Editor -eq "VSCode"'>`r`n-> Creating VSCode folder and files</message>
    <file source='' destination='.vscode' condition='$PLASTER_PARAM_Editor -eq "VSCode"' />
    <file source='vscode\settings.json' destination='${PLASTER_PARAM_ModuleName}\.vscode\settings.json' condition='$PLASTER_PARAM_Editor -eq "VSCode"' />
    <file source='vscode\launch.json' destination='${PLASTER_PARAM_ModuleName}\.vscode\launch.json' condition='$PLASTER_PARAM_Editor -eq "VSCode"' />
    <file source='vscode\PSScriptAnalyzerSettings.psd1' destination='${PLASTER_PARAM_ModuleName}\.vscode\PSScriptAnalyzerSettings.psd1' condition='$PLASTER_PARAM_Editor -eq "VSCode"' />
    <file source='vscode\tasks_pester.json' destination='${PLASTER_PARAM_ModuleName}\.vscode\tasks.json' condition='($PLASTER_PARAM_Editor -eq "VSCode") -and ($PLASTER_PARAM_Build -eq "No") -and ($PLASTER_PARAM_UnitTests -eq "Yes")' />
    <file source='vscode\tasks_psake.json' destination='${PLASTER_PARAM_ModuleName}\.vscode\tasks.json' condition='($PLASTER_PARAM_Editor -eq "VSCode") -and ($PLASTER_PARAM_Build -eq "Yes") -and ($PLASTER_PARAM_UnitTests -eq "No")' />
    <file source='vscode\tasks_psake_pester.json' destination='${PLASTER_PARAM_ModuleName}\.vscode\tasks.json' condition='($PLASTER_PARAM_Editor -eq "VSCode") -and ($PLASTER_PARAM_Build -eq "Yes") -and ($PLASTER_PARAM_UnitTests -eq "Yes")' />

    <message condition='$PLASTER_PARAM_CI -eq "Yes"'>`r`n-> Creating Continous Integration folder</message>
    <file source='' destination='${PLASTER_PARAM_ModuleName}\CI' condition='$PLASTER_PARAM_CI -eq "Yes"' />
    <message condition='$PLASTER_PARAM_UnitTests -eq "Yes"'>`r`n-> Copying Continous Integration files</message>
    <file source='CI\*.ps1' destination='${PLASTER_PARAM_ModuleName}\CI\' condition='$PLASTER_PARAM_CI -eq "Yes"'/>

    <requireModule name='Pester' condition='$PLASTER_PARAM_UnitTests -eq "Yes"' minimumVersion='3.4.0' message='Without Pester, you will not be able to run the provided Pester test to validate your module manifest file.`nWithout version 3.4.0, VS Code will not display Pester warnings and errors in the Problems panel.'/>
    <requireModule name='psake' condition='$PLASTER_PARAM_Build -eq "Yes"' message='Without psake, you will not be able to run the provided build script to build and/or publish your module.'/>
    <requireModule name='PSScriptAnalyzer' condition='$PLASTER_PARAM_Editor -eq "VSCode"' message="Without PSScriptAnalyzer, you will not be able to perform script analysis, or use the provided options to control script analysis."/>
    <requireModule name='PSdeploy' condition='$PLASTER_PARAM_Deploy -eq "Yes"' message='Without PSDeploy, you will not be able to automatically deploy your module.'/>
  </content>
</plasterManifest>